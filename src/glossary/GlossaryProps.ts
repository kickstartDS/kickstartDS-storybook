/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run `yarn run schema` to regenerate this file.
 */

/**
 * Title of the term being defined
 */
export type Term = string;
/**
 * Select an image to display inside the content box, at the top
 */
export type Definition = string;
/**
 * Url to main image for this glossary entry
 */
export type UrlForTheMainImage = string;
/**
 * Title of the term being defined
 */
export type CaptionForTheMainImage = string;
/**
 * Select a media asset for this glossary entry
 */
export type UrlForTheMediaAsset = string;
/**
 * Title of the term being defined
 */
export type CaptionForTheMainImage1 = string;
/**
 * Media assets to display for this glossary entry
 */
export type Media = MediaAsset[];
/**
 * Name of the tag
 */
export type Tag = string;
/**
 * Tags for this glossary entry
 */
export type Tags = Tag[];
/**
 * Entries related to this glossary entry
 */
export type RelatedEntries =
  | []
  | [RelatedEntry]
  | [RelatedEntry, RelatedEntry]
  | [RelatedEntry, RelatedEntry, RelatedEntry];
/**
 * Title of the related term
 */
export type Title = string;
/**
 * Excerpt for the related term
 */
export type Excerpt = string;
/**
 * Name of the tag
 */
export type Tag1 = string;
/**
 * Tags for this related teaser
 */
export type Tags1 = Tag1[];
/**
 * Type of content that is being teased
 */
export type Type = "Showcase" | "Blog" | "Appearance" | "Glossary";
/**
 * Url for the related term
 */
export type Url = string;
/**
 * Image for the related term
 */
export type Image = string;
/**
 * Link to the related StacKShare discussion
 */
export type StackShareUrl = string;

/**
 * Display one glossary entry with all its details
 */
export interface GlossaryProps {
  term: Term;
  definition?: Definition;
  cover?: CoverImage;
  media?: Media;
  tags?: Tags;
  related?: RelatedEntries;
  stackshare?: StackShareUrl;
  [k: string]: unknown;
}
/**
 * Add main image to represent this glossary entry
 */
export interface CoverImage {
  src?: UrlForTheMainImage;
  caption?: CaptionForTheMainImage;
  [k: string]: unknown;
}
/**
 * Single media asset
 */
export interface MediaAsset {
  src?: UrlForTheMediaAsset;
  caption?: CaptionForTheMainImage1;
  [k: string]: unknown;
}
/**
 * Single related entry
 */
export interface RelatedEntry {
  title?: Title;
  excerpt?: Excerpt;
  tags?: Tags1;
  type?: Type;
  url?: Url;
  image?: Image;
  [k: string]: unknown;
}
