/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Title of the term being defined
 */
export type Term = string;
/**
 * Select an image to display inside the content box, at the top
 */
export type Definition = string;
/**
 * Url to main image for this glossary entry
 */
export type UrlForTheMainImage = string;
/**
 * Title of the term being defined
 */
export type CaptionForTheMainImage = string;
/**
 * Select a media asset for this glossary entry
 */
export type UrlForTheMediaAsset = string;
/**
 * Title of the term being defined
 */
export type CaptionForTheMainImage1 = string;
/**
 * Media assets to display for this glossary entry
 */
export type Media = MediaAsset[];
/**
 * Text to display inside tag label
 */
export type Label = string;
/**
 * Set optional href to link the tag
 */
export type LinkTarget = string;
/**
 * Tags for this glossary entry
 */
export type Tags = TagLabel[];
/**
 * Title of the related appearance
 */
export type Title = string;
/**
 * Excerpt for the related appearance
 */
export type Excerpt = string;
/**
 * Url for the related appearance
 */
export type Url = string;
/**
 * Type of content that is being teased
 */
export type Type = string;
/**
 * Image for the related appearance
 */
export type Image = string;
/**
 * Text to display inside tag label
 */
export type Label1 = string;
/**
 * Set optional href to link the tag
 */
export type LinkTarget1 = string;
/**
 * Tags for this related teaser
 */
export type Tags1 = TagLabel1[];
/**
 * Entries related to this glossary entry
 */
export type RelatedEntries = Related[];
/**
 * Link to the related StacKShare discussion
 */
export type StackShareUrl = string;

/**
 * Display one glossary entry with all its details
 */
export interface GlossaryProps {
  term: Term;
  definition?: Definition;
  cover?: CoverImage;
  media?: Media;
  tags?: Tags;
  related?: RelatedEntries;
  stackshare?: StackShareUrl;
  [k: string]: unknown;
}
/**
 * Add main image to represent this glossary entry
 */
export interface CoverImage {
  src?: UrlForTheMainImage;
  caption?: CaptionForTheMainImage;
  [k: string]: unknown;
}
/**
 * Single media asset
 */
export interface MediaAsset {
  src?: UrlForTheMediaAsset;
  caption?: CaptionForTheMainImage1;
  [k: string]: unknown;
}
/**
 * Component to render a pill / tag / label
 */
export interface TagLabel {
  label?: Label;
  link?: LinkTarget;
  [k: string]: unknown;
}
/**
 * A preview of contextually relevant content
 */
export interface Related {
  title: Title;
  excerpt: Excerpt;
  url: Url;
  typeLabel?: Type;
  image: Image;
  tags?: Tags1;
  [k: string]: unknown;
}
/**
 * Component to render a pill / tag / label
 */
export interface TagLabel1 {
  label?: Label1;
  link?: LinkTarget1;
  [k: string]: unknown;
}
