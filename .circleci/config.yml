version: 2.1

defaults: &defaults
  docker:
    - image: cimg/node:16.14
  working_directory: /mnt/ramdisk
  resource_class: medium+

aliases:
  - &save-cache-yarn
    key: yarn-{{ checksum "yarn.lock" }}-{{ checksum ".circleci/config.yml" }}
    paths:
      - .yarn-cache
  - &restore-cache-yarn
    keys:
      - yarn-{{ checksum "yarn.lock" }}-{{ checksum ".circleci/config.yml" }}
      - yarn-{{ checksum "yarn.lock" }}
  - &save-cache-node
    key: node-2-{{ checksum "yarn.lock" }}-{{ checksum ".circleci/config.yml" }}
    paths:
      - node_modules
  - &restore-cache-node
    keys:
      - node-2-{{ checksum "yarn.lock" }}-{{ checksum ".circleci/config.yml" }}
      - node-2-{{ checksum "yarn.lock" }}
      - node-2-

jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-cache-yarn
      - restore_cache: *restore-cache-node
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile --cache-folder /mnt/ramdisk/.yarn-cache
      - save_cache: *save-cache-yarn
      - save_cache: *save-cache-node

  release:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-cache-node
      - run:
          name: Create Release
          command: yarn auto shipit

  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-cache-node
      - run:
          name: Build Storybook
          command: yarn build-storybook
      - persist_to_workspace:
          root: .
          paths:
            - storybook
      - run:
          name: Compress storybook folder
          command: tar -czf storybook.tar.gz storybook
      - store_artifacts:
          path: storybook.tar.gz

  chromatic:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-cache-node
      - attach_workspace:
          at: .
      - run:
          name: Deploy Storybook
          command: yarn chromatic

  update_website:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: Trigger live website upgrade
          command: |
            curl --request POST \
              --url https://circleci.com/api/v2/project/gh/kickstartDS/website/pipeline \
              --header "Circle-Token: ${CIRCLE_CI_WEBSITE_BUILD_TOKEN}" \
              --header "content-type: application/json" \
              --data '{"branch":"master","parameters":{"run_workflow_update":true}}'
      - run:
          name: Trigger staging website upgrade
          command: |
            curl --request POST \
              --url https://circleci.com/api/v2/project/gh/kickstartDS/website/pipeline \
              --header "Circle-Token: ${CIRCLE_CI_WEBSITE_BUILD_TOKEN}" \
              --header "content-type: application/json" \
              --data '{"branch":"next","parameters":{"run_workflow_update":true}}'

workflows:
  release:
    jobs:
      - install

      - release:
          context: kickstartDS
          requires:
            - install

      - build:
          requires:
            - install

      - update_website:
          context: kickstartDS
          filters:
            branches:
              only: master
          requires:
            - build

      - chromatic:
          requires:
            - build
